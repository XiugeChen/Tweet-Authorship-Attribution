##### without stacking
####INFO: trainning LinearSVM, 0.68 0.4568562241562166
##### stacking 1
train_1, test_1 = predict(svm_model, train_df, test_df, wordngram=[1], pos=True, posngram=[1], addsentiment=True)
train_2, test_2 = predict(svm_model, train_df, test_df, wordngram=[2], pos=False, posngram=[1], addsentiment=True)
train_3, test_3 = predict(svm_model, train_df, test_df, wordngram=[1], pos=True, posngram=[1000], addsentiment=True)
svm: ####INFO: trainning Stacking 0.45984635734231566
lr: ####INFO: trainning Stacking 0.4589500423033687

#### stacking 2
train_1, test_1 = predict(svm_model, train_df, test_df, wordngram=[1], pos=True, posngram=[1], addsentiment=True)
train_2, test_2 = predict(svm_model, train_df, test_df, wordngram=[2], pos=False, posngram=[1], addsentiment=False)
train_3, test_3 = predict(svm_model, train_df, test_df, wordngram=[0], pos=True, posngram=[1,1000], addsentiment=False)


0.5: 
0.85: ####INFO: trainning LinearSVM, 0.68 0.4568562241562166
1: 

CountVectorizer float
max_df where min_df is default 1
0.3: ####INFO: trainning LinearSVM, 0.68 0.4497816312020115
0.35: ####INFO: trainning LinearSVM, 0.68 0.4497816312020115
0.4: ####INFO: trainning LinearSVM, 0.68 0.454166087395185
0.41: ####INFO: trainning LinearSVM, 0.68 0.45605931210353
0.42: ####INFO: trainning LinearSVM, 0.68 0.4571557240628711
0.43: ####INFO: trainning LinearSVM, 0.68 0.4571557240628711
0.45: ####INFO: trainning LinearSVM, 0.68 0.4571557240628711
0.47: ####INFO: trainning LinearSVM, 0.68 0.4568569192819947
0.48: ####INFO: trainning LinearSVM, 0.68 0.4568569192819947
0.49: ####INFO: trainning LinearSVM, 0.68 0.4568569192819947
0.5: ####INFO: trainning LinearSVM, 0.68 0.45635861340281947
0.55: ####INFO: trainning LinearSVM, 0.68 0.45645801638907973
0.6: ####INFO: trainning LinearSVM, 0.68 0.45645801638907973
0.65: ####INFO: trainning LinearSVM, 0.68 0.45645801638907973
0.7: ####INFO: trainning LinearSVM, 0.68 0.45645801638907973
0.75: ####INFO: trainning LinearSVM, 0.68 0.45645801638907973
0.8: ####INFO: trainning LinearSVM, 0.68 0.4568562241562166
0.85: ####INFO: trainning LinearSVM, 0.68 0.4568562241562166
0.9: ####INFO: trainning LinearSVM, 0.68 0.4568562241562166

min_df WHILE max_df = 0.42: 
default: ####INFO: trainning LinearSVM, 0.68 0.4571557240628711
0: ####INFO: trainning LinearSVM, 0.68 0.4571557240628711
0.00005: ####INFO: trainning LinearSVM, 0.68 0.4571557240628711
0.0001: ####INFO: trainning LinearSVM, 0.68 0.4571557240628711
0.0002: ####INFO: trainning LinearSVM, 0.68 0.43832367439514125
0.0003: ####INFO: trainning LinearSVM, 0.68 0.42018963031225054
0.0005: ####INFO: trainning LinearSVM, 0.68 0.3962735300075868
0.001: ####INFO: trainning LinearSVM, 0.68 0.35332885804737185
0.005: ####INFO: trainning LinearSVM, 0.68 0.2300700488176904
0.01: ####INFO: trainning LinearSVM, 0.68 0.1820464900120356
0.05: ####INFO: trainning LinearSVM, 0.68 0.09406114326343679
0.1: ####INFO: trainning LinearSVM, 0.68 0.08957738338768555 

CountVectorizer int
min_df where max_df is 0.42
1: ####INFO: trainning LinearSVM, 0.68 0.4571557240628711
2: ####INFO: trainning LinearSVM, 0.68 0.43832367439514125
3: ####INFO: trainning LinearSVM, 0.68 0.42018963031225054

stop remove stop word
####INFO: trainning LinearSVM, 0.68 0.4583507445790119

transfer all to lowercase or not
all lowercase: ####INFO: trainning LinearSVM, 0.68 0.451677338502421
####INFO: trainning LinearSVM, 0.68 0.45327195703725487
no transfer: ####INFO: trainning LinearSVM, 0.68 0.455563290209054